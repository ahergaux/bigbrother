-- DB BigBrother
-- Creé le 08/11/2024
-- Version 1.0
-- Autres Tables de Définition
-- tablesdefinition.sql


-- DEFINITION AUTRES TABLES PERSONNE 

CREATE TABLE IF NOT EXISTS NOM(
    id SERIAL PRIMARY KEY,
    nom VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS PRENOM(
    id SERIAL PRIMARY KEY,
    prenom VARCHAR(50) UNIQUE NOT NULL
);

-- DEFINITION ADRESSE

CREATE TABLE IF NOT EXISTS PAYS(
    id SERIAL PRIMARY KEY,
    nom VARCHAR(50) UNIQUE NOT NULL,
    code VARCHAR(2) UNIQUE NOT NULL,
    indicatif INTEGER UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS VILLE(
    id SERIAL PRIMARY KEY,
    nom VARCHAR(50) NOT NULL,
    id_pays INTEGER NOT NULL,
    CONSTRAINT fk_id_pays_ville FOREIGN KEY (id_pays) REFERENCES PAYS(id)
);

CREATE TABLE IF NOT EXISTS RUE(
    id SERIAL PRIMARY KEY,
    nom VARCHAR(50) NOT NULL,
    id_ville INTEGER NOT NULL,
    id_pays INTEGER NOT NULL,
    CONSTRAINT fk_id_pays_rue FOREIGN KEY (id_pays) REFERENCES PAYS(id),
    CONSTRAINT fk_id_ville_rue FOREIGN KEY (id_ville) REFERENCES VILLE(id)
);

CREATE TABLE IF NOT EXISTS ADRESSE(
    id SERIAL PRIMARY KEY,
    num INTEGER NOT NULL,
    id_rue INTEGER NOT NULL,
    id_ville INTEGER NOT NULL,
    id_pays INTEGER NOT NULL,
    CONSTRAINT fk_id_rue_adresse FOREIGN KEY (id_rue) REFERENCES RUE(id),
    CONSTRAINT fk_id_pays_adresse FOREIGN KEY (id_pays) REFERENCES PAYS(id),
    CONSTRAINT fk_id_ville_adresse FOREIGN KEY (id_ville) REFERENCES VILLE(id)
);

-- DEFINITION GENRE

CREATE TABLE IF NOT EXISTS GENRE(
    id SERIAL PRIMARY KEY,
    genre VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS RESEAUX(
    id SERIAL PRIMARY KEY,
    nom VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS MATRIMONIALE(
    id SERIAL PRIMARY KEY,
    nom VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS TYPE_RELATION(
    id SERIAL PRIMARY KEY,
    nom VARCHAR(20) NOT NULL
);